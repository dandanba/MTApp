// fabric auto added
buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

// [Error:Could not find property 'options' on task ':app:compileOfficalDebugJavaWithJack'.](http://blog.csdn.net/yuhanghate/article/details/51544201)
apply plugin: 'android-apt'//butterknife
apply plugin: 'me.tatarka.retrolambda'//retrolambda

android {
    signingConfigs {
        maitian {
            keyAlias KEYALIAS
            keyPassword KEYPASSWORD
            storeFile file(STOREFILE)
            storePassword KEYPASSWORD
        }
    }
    compileSdkVersion COMPILESDKVERSION as int
    buildToolsVersion BUILDTOOLSVERSION
    defaultConfig {
        applicationId "cn.maitian"
        minSdkVersion MINSDKVERSION as int
        targetSdkVersion TARGETSDKVERSION as int
        versionCode VERSIONCODE as int
        versionName VERSIONNAME
        // [Error:Jack is required to support javava 8 language features. Either enable Jack or remove sourceCompatibility JavaVersion.VERSION_1_8.](http://blog.csdn.net/yuhanghate/article/details/51490214)
        // jackOptions {
        //    enabled true
        // }
        // [Enabling multidex support.](http://blog.csdn.net/zhixuan322145/article/details/51277839)
        multiDexEnabled true
        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "offical"]
    }
    // [使用Gradle构建Android应用的渠道包](http://www.cnblogs.com/shanpow/p/4097320.html)
    // [Android Studio 多渠道打包、自动版本号及 gradlew 命令的基本使用](http://www.jianshu.com/p/44d40f8e67c9)
    // [Android渠道打包工具](https://github.com/mcxiaoke/gradle-packer-plugin)
    // [Jenkins+Gradle实现android开发持续集成、打包](http://my.oschina.net/uboluo/blog/157483)
    productFlavors {
        offical {}
    }
    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }
    buildTypes {
        debug {
            minifyEnabled false
            zipAlignEnabled true
            shrinkResources true
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.maitian
            // buildConfigField
            buildConfigField "boolean", "DEBUG_URL", "true"
        }
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.maitian
            // buildConfigField
            buildConfigField "boolean", "DEBUG_URL", "false"
        }
    }
    dexOptions {
        incremental true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    testCompile "junit:junit:$JUNIT"
    compile fileTree(include: ['*.jar'], dir: 'libs')
    // multidex
    compile "com.android.support:multidex:$MULTIDEX"
    // appcompat
    compile "com.android.support:appcompat-v7:$APPCOMPAT_V7"
    // eventbus
    compile "org.greenrobot:eventbus:$EVENTBUS"
    // butterknife
    compile "com.jakewharton:butterknife:$BUTTERKNIFE"
    apt "com.jakewharton:butterknife-compiler:$BUTTERKNIFE"
    // jackson
    compile "com.fasterxml.jackson.core:jackson-databind:$JACKSON"
    compile "com.fasterxml.jackson.core:jackson-annotations:$JACKSON"
    compile "com.fasterxml.jackson.core:jackson-core:$JACKSON"
    // glide
    compile "com.android.support:support-v4:$SUPPORT_V4"
    compile "com.github.bumptech.glide:glide:$GLIDE"
    compile "jp.wasabeef:glide-transformations:$GLIDE_TRANSFORMATIONS"
    // If you want to use the GPU Filters
    // compile 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.3.0'
    // leakcanary
    debugCompile "com.squareup.leakcanary:leakcanary-android:$LEAKCANARY"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$LEAKCANARY"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$LEAKCANARY"
    // logger
    compile "com.orhanobut:logger:$ORHANOBUTLOGGER"
    // common
    compile "cn.trinea.android.common:trinea-android-common:$COMMON"
    // okhttp
    compile "com.squareup.okhttp3:okhttp:$OKHTTP"
    // rx
    compile "io.reactivex:rxandroid:$RXANDROID"
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    compile "io.reactivex:rxjava:$RXJAVA"
    // retrofit
    compile "com.squareup.retrofit2:retrofit:$RETROFIT"
    compile "com.squareup.retrofit2:converter-jackson:$RETROFIT"
    compile "com.squareup.retrofit2:adapter-rxjava:$RETROFIT"
    //  rxbinding
    compile "com.jakewharton.rxbinding:rxbinding:$RXBINDING"
    // crashlytics
    compile('com.crashlytics.sdk.android:crashlytics:2.6.0@aar') {
        transitive = true;
    }
}
